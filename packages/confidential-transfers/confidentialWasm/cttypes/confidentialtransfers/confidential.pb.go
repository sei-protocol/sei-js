// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: confidentialtransfers/confidential.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// CtAccount represents an confidential transfers account state
type CtAccount struct {
	PublicKey                   []byte      `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PendingBalanceLo            *Ciphertext `protobuf:"bytes,2,opt,name=pending_balance_lo,json=pendingBalanceLo,proto3" json:"pending_balance_lo,omitempty"`
	PendingBalanceHi            *Ciphertext `protobuf:"bytes,3,opt,name=pending_balance_hi,json=pendingBalanceHi,proto3" json:"pending_balance_hi,omitempty"`
	PendingBalanceCreditCounter uint32      `protobuf:"varint,4,opt,name=pending_balance_credit_counter,json=pendingBalanceCreditCounter,proto3" json:"pending_balance_credit_counter,omitempty"`
	AvailableBalance            *Ciphertext `protobuf:"bytes,5,opt,name=available_balance,json=availableBalance,proto3" json:"available_balance,omitempty"`
	DecryptableAvailableBalance string      `protobuf:"bytes,6,opt,name=decryptable_available_balance,json=decryptableAvailableBalance,proto3" json:"decryptable_available_balance,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}    `json:"-"`
	XXX_unrecognized            []byte      `json:"-"`
	XXX_sizecache               int32       `json:"-"`
}

func (m *CtAccount) Reset()         { *m = CtAccount{} }
func (m *CtAccount) String() string { return proto.CompactTextString(m) }
func (*CtAccount) ProtoMessage()    {}
func (*CtAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_493ee92716eb88d4, []int{0}
}
func (m *CtAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtAccount.Unmarshal(m, b)
}
func (m *CtAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtAccount.Marshal(b, m, deterministic)
}
func (m *CtAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtAccount.Merge(m, src)
}
func (m *CtAccount) XXX_Size() int {
	return xxx_messageInfo_CtAccount.Size(m)
}
func (m *CtAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_CtAccount.DiscardUnknown(m)
}

var xxx_messageInfo_CtAccount proto.InternalMessageInfo

func (m *CtAccount) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CtAccount) GetPendingBalanceLo() *Ciphertext {
	if m != nil {
		return m.PendingBalanceLo
	}
	return nil
}

func (m *CtAccount) GetPendingBalanceHi() *Ciphertext {
	if m != nil {
		return m.PendingBalanceHi
	}
	return nil
}

func (m *CtAccount) GetPendingBalanceCreditCounter() uint32 {
	if m != nil {
		return m.PendingBalanceCreditCounter
	}
	return 0
}

func (m *CtAccount) GetAvailableBalance() *Ciphertext {
	if m != nil {
		return m.AvailableBalance
	}
	return nil
}

func (m *CtAccount) GetDecryptableAvailableBalance() string {
	if m != nil {
		return m.DecryptableAvailableBalance
	}
	return ""
}

type CtAccountWithDenom struct {
	Denom                string    `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Account              CtAccount `protobuf:"bytes,2,opt,name=account,proto3" json:"account"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CtAccountWithDenom) Reset()         { *m = CtAccountWithDenom{} }
func (m *CtAccountWithDenom) String() string { return proto.CompactTextString(m) }
func (*CtAccountWithDenom) ProtoMessage()    {}
func (*CtAccountWithDenom) Descriptor() ([]byte, []int) {
	return fileDescriptor_493ee92716eb88d4, []int{1}
}
func (m *CtAccountWithDenom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtAccountWithDenom.Unmarshal(m, b)
}
func (m *CtAccountWithDenom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtAccountWithDenom.Marshal(b, m, deterministic)
}
func (m *CtAccountWithDenom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtAccountWithDenom.Merge(m, src)
}
func (m *CtAccountWithDenom) XXX_Size() int {
	return xxx_messageInfo_CtAccountWithDenom.Size(m)
}
func (m *CtAccountWithDenom) XXX_DiscardUnknown() {
	xxx_messageInfo_CtAccountWithDenom.DiscardUnknown(m)
}

var xxx_messageInfo_CtAccountWithDenom proto.InternalMessageInfo

func (m *CtAccountWithDenom) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *CtAccountWithDenom) GetAccount() CtAccount {
	if m != nil {
		return m.Account
	}
	return CtAccount{}
}

func init() {
	proto.RegisterType((*CtAccount)(nil), "seiprotocol.seichain.confidentialtransfers.CtAccount")
	proto.RegisterType((*CtAccountWithDenom)(nil), "seiprotocol.seichain.confidentialtransfers.CtAccountWithDenom")
}

func init() {
	proto.RegisterFile("confidentialtransfers/confidential.proto", fileDescriptor_493ee92716eb88d4)
}

var fileDescriptor_493ee92716eb88d4 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0x87, 0x6f, 0x6e, 0xff, 0x5c, 0x32, 0x57, 0x41, 0x87, 0x2e, 0x42, 0x4b, 0x35, 0x74, 0x15,
	0x04, 0x13, 0x50, 0x74, 0x2b, 0x4d, 0x5c, 0x08, 0xba, 0x0a, 0x88, 0xe0, 0x26, 0x4c, 0x26, 0xa7,
	0xc9, 0x60, 0x3a, 0x13, 0x26, 0x53, 0x69, 0x96, 0xbe, 0x9d, 0x4f, 0xe1, 0xca, 0x07, 0x91, 0x4e,
	0x9a, 0x52, 0x6b, 0x05, 0x45, 0x77, 0x67, 0x86, 0xdf, 0xf9, 0xbe, 0x93, 0x9c, 0x41, 0x0e, 0x15,
	0x7c, 0xc2, 0x12, 0xe0, 0x8a, 0x91, 0x5c, 0x49, 0xc2, 0xcb, 0x09, 0xc8, 0xd2, 0x5b, 0xbf, 0x75,
	0x0b, 0x29, 0x94, 0xc0, 0x47, 0x25, 0x30, 0x5d, 0x51, 0x91, 0xbb, 0x25, 0x30, 0x9a, 0x11, 0xc6,
	0xdd, 0xad, 0xed, 0xfd, 0x5e, 0x2a, 0x52, 0xa1, 0xc3, 0xde, 0xa2, 0xaa, 0x09, 0xfd, 0xcf, 0x5c,
	0xb2, 0x2a, 0x94, 0x48, 0x25, 0x29, 0xb2, 0xaa, 0x4e, 0x8e, 0x5e, 0x5b, 0xc8, 0x0c, 0xd4, 0x98,
	0x52, 0x31, 0xe3, 0x0a, 0x0f, 0x11, 0x2a, 0x66, 0x71, 0xce, 0x68, 0xf4, 0x00, 0x95, 0x65, 0xd8,
	0x86, 0xb3, 0x13, 0x9a, 0xf5, 0xcd, 0x35, 0x54, 0x38, 0x41, 0xb8, 0x00, 0x9e, 0x30, 0x9e, 0x46,
	0x31, 0xc9, 0x09, 0xa7, 0x10, 0xe5, 0xc2, 0xfa, 0x6b, 0x1b, 0xce, 0xff, 0x93, 0x73, 0xf7, 0xeb,
	0x53, 0xbb, 0x01, 0x2b, 0x32, 0x90, 0x0a, 0xe6, 0x2a, 0xdc, 0x5b, 0x12, 0xfd, 0x1a, 0x78, 0x23,
	0xb6, 0x59, 0x32, 0x66, 0xb5, 0x7e, 0xd3, 0x72, 0xc5, 0x70, 0x80, 0x0e, 0x36, 0x2d, 0x54, 0x42,
	0xc2, 0x54, 0xa4, 0x7f, 0x05, 0x48, 0xab, 0x6d, 0x1b, 0xce, 0x6e, 0x38, 0x78, 0xdf, 0x19, 0xe8,
	0x4c, 0x50, 0x47, 0x30, 0x45, 0xfb, 0xe4, 0x91, 0xb0, 0x9c, 0xc4, 0x39, 0x34, 0x18, 0xab, 0xf3,
	0xb3, 0x49, 0x57, 0xc0, 0xa5, 0x11, 0xfb, 0x68, 0x98, 0x80, 0x5e, 0x9d, 0xd6, 0x7c, 0x14, 0x76,
	0x6d, 0xc3, 0x31, 0xc3, 0xc1, 0x5a, 0x68, 0xbc, 0xc1, 0x18, 0x3d, 0x19, 0x08, 0xaf, 0xd6, 0x7c,
	0xc7, 0x54, 0x76, 0x09, 0x5c, 0x4c, 0x71, 0x0f, 0x75, 0x92, 0x45, 0xa1, 0x57, 0x6d, 0x86, 0xf5,
	0x01, 0xdf, 0xa2, 0x7f, 0xa4, 0x4e, 0x2e, 0x77, 0x7b, 0xf6, 0xad, 0x6f, 0x69, 0x34, 0x7e, 0xfb,
	0xf9, 0xe5, 0xf0, 0x4f, 0xd8, 0xb0, 0xfc, 0xf1, 0xfd, 0x45, 0xca, 0x54, 0x36, 0x8b, 0x5d, 0x2a,
	0xa6, 0x5e, 0x09, 0xec, 0xb8, 0x41, 0xea, 0x83, 0x66, 0x7a, 0x73, 0x6f, 0xfb, 0xd3, 0x55, 0x55,
	0x01, 0x65, 0xdc, 0xd5, 0x1d, 0xa7, 0x6f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x88, 0xdf, 0x2c, 0x1f,
	0x4c, 0x03, 0x00, 0x00,
}

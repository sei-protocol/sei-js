#!/usr/bin/env bash
set -e

# 1) Compile the Go WASM
echo "Compiling Go code to WASM..."
cd confidentialWasm
GOOS=js GOARCH=wasm go build -o ct.wasm
cd ..

# 2) Base64-encode the .wasm
echo "Base64-encoding ct.wasm..."
base64 -i confidentialWasm/ct.wasm -o confidentialWasm/ct.wasm.b64

# 3) Generate/overwrite the embeddedWasm.ts file
#    This writes a constant 'ctWasmBase64' to src/payload/embeddedWasm.ts
echo "Writing base64 to TypeScript file..."

# Create or overwrite the file with an export line
cat <<EOF > src/payload/embeddedWasm.ts
/**
 * This file is auto-generated by \`build-wasm.sh\`.
 * It contains the Base64-encoded ct.wasm data for embedding in TypeScript.
 */

export const ctWasmBase64 = \`
EOF

# Append the contents of ct.wasm.b64 into that file
cat confidentialWasm/ct.wasm.b64 >> src/payload/embeddedWasm.ts

# Close the backtick
cat <<EOF >> src/payload/embeddedWasm.ts
\`;
EOF

echo "Done! Wrote src/payload/embeddedWasm.ts with embedded WASM."
